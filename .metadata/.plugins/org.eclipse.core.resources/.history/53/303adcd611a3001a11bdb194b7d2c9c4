package com.example.demo.controller;

import lombok.AllArgsConstructor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import com.example.demo.dao.UserDao;
import com.example.demo.dto.UserDto;
import com.example.demo.service.UserService;

import javax.servlet.http.HttpServletRequest;

@Controller
@AllArgsConstructor
public class UserController {

	    private UserDao userDao;

	    @RequestMapping("/list")
	    public String listPerson(Model model) {

	        model.addAttribute("person", userDao.listPerson());

	        return "list";
	    }

	    @GetMapping("/add")
	    public String addPage(Model model) {
	        return "addpage";
	    }

	    @PostMapping("/add")
	    public String addPerson(Model model, HttpServletRequest request) {

	        String name = request.getParameter("name");
	        String address = request.getParameter("address");
	        String email = request.getParameter("email");
	        String password = request.getParameter("password");
	        String phone = request.getParameter("phone");
	        String userId = request.getParameter("userId");

	        UserDto userDto = new UserDto();
	        userDto.setName(name);
	        userDto.setEmail(email);
	        userDto.setPassword(password);
	        userDto.setPhone(phone);
	        userDto.setUserId(userId);
	        
	        userDao.addPerson(userDto);

	        return "redirect:/list";
	    }

	    @GetMapping("/update/{id}")
	    public String updatePage(Model model, @PathVariable("id") int id) {
	        model.addAttribute("person", userDao.findById(id));
	        return "updatepage";
	    }

	    @PostMapping("/update/{id}")
	    public String updatePerson(Model model, @PathVariable("id") String id, HttpServletRequest request) {
	        String name = request.getParameter("name");
	        String address = request.getParameter("address");

	        UserDto userDto = new UserDto();
	        userDao.updatePerson(personDto);

	        return "redirect:/list";
	    }

	    @GetMapping("/delete/{id}")
	    public String deletePerson(Model model, @PathVariable("id") String userId) {
	    	userDao.deletePerson(userId);
	        return "redirect:/list";
	    }

}
